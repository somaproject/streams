[library Boost.Itl
    [quickbook 1.4]
    [authors [Faulhaber, Joachim]]
    [copyright 2007-2009 Joachim Faulhaber]
    [copyright 1999-2006 Cortex Software GmbH]
    [category container]
    [id optional]
    [dirname optional]
    [purpose
        Implements sets and maps as sets and maps of intervals
    ]
    [source-mode c++]
    [license
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt or copy at
[@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[/ Macros will be used for links so we have a central place to change them ]
[def __itv__          [classref boost::itl::interval interval]]
[def __Itv__          [classref boost::itl::interval Interval]]
[def __itvs__         [classref boost::itl::interval intervals]]
[def __itl_itvs__     [classref boost::itl::interval itl::intervals]]
[def __Itvs__         [classref boost::itl::interval Intervals]]
[def __itv_set__      [classref boost::itl::interval_set interval_set]]
[def __itv_sets__     [classref boost::itl::interval_set interval_sets]]
[def __itv_bset__     [classref boost::itl::interval_base_set interval_set]]
[def __Itv_bset__     [classref boost::itl::interval_base_set Interval_set]]
[def __itv_bsets__    [classref boost::itl::interval_base_set interval_sets]]
[def __itv_bset_s__   [classref boost::itl::interval_base_set interval_set's]]
[def __Itv_bsets__    [classref boost::itl::interval_base_set Interval_sets]]

[def __ele_set__      [classref boost::itl::set set]]
[def __ele_sets__     [classref boost::itl::set sets]]
[def __itl_set__      [classref boost::itl::set itl::set]]
[def __itl_sets__     [classref boost::itl::set itl::sets]]


[def __Itv_set__      [classref boost::itl::interval_set Interval_set]]
[def __Itv_sets__     [classref boost::itl::interval_set Interval_sets]]
[def __spl_itv_set__  [classref boost::itl::split_interval_set split_interval_set]]
[def __spl_itv_sets__ [classref boost::itl::split_interval_set split_interval_sets]]
[def __spl_itv_set_s__ [classref boost::itl::split_interval_set split_interval_set's]]
[def __Spl_itv_set__  [classref boost::itl::split_interval_set Split_interval_set]]
[def __sep_itv_set__  [classref boost::itl::separate_interval_set separate_interval_set]]
[def __sep_itv_sets__ [classref boost::itl::separate_interval_set separate_interval_sets]]
[def __Sep_itv_set__  [classref boost::itl::separate_interval_set Separate_interval_set]]
[def __itv_map__      [classref boost::itl::interval_map interval_map]]
[def __itv_maps__     [classref boost::itl::interval_map interval_maps]]
[def __itv_map_s__    [classref boost::itl::interval_map interval_map's]]
[def __itv_bmap__     [classref boost::itl::interval_base_map interval_map]]
[def __Itv_bmap__     [classref boost::itl::interval_base_map Interval_map]]
[def __itv_bmaps__    [classref boost::itl::interval_base_map interval_maps]]
[def __Itv_bmaps__    [classref boost::itl::interval_base_map Interval_maps]]
[def __itv_bmap_s__   [classref boost::itl::interval_base_map interval_map's]]
[def __Itv_map__      [classref boost::itl::interval_map Interval_map]]
[def __spl_itv_map__  [classref boost::itl::split_interval_map split_interval_map]]
[def __Spl_itv_map__  [classref boost::itl::split_interval_map Split_interval_map]]
[def __spl_itv_maps__ [classref boost::itl::split_interval_map split_interval_maps]]

[def __inverse__      [classref boost::itl::inverse inverse]]
[def __ip_cross__     [classref boost::itl::inplace_cross    inplace_cross]]
[def __ip_dash__      [classref boost::itl::inplace_dash     inplace_dash]]
[def __ip_plus__      [classref boost::itl::inplace_plus     inplace_plus]]
[def __ip_minus__     [classref boost::itl::inplace_minus    inplace_minus]]
[def __ip_star__      [classref boost::itl::inplace_star     inplace_star]]
[def __ip_slash__     [classref boost::itl::inplace_slash    inplace_slash]]
[def __ip_times__     [classref boost::itl::inplace_times    inplace_times]]
[def __ip_divide__    [classref boost::itl::inplace_divide   inplace_divide]]
[def __ip_pipe__      [classref boost::itl::inplace_pipe     inplace_pipe]]
[def __ip_et__        [classref boost::itl::inplace_et       inplace_et]]
[def __ip_caret__     [classref boost::itl::inplace_caret    inplace_caret]]
[def __ip_min__       [classref boost::itl::inplace_min      inplace_min]]
[def __ip_max__       [classref boost::itl::inplace_max      inplace_max]]
[def __ip_identity__  [classref boost::itl::inplace_identity inplace_identity]]
[def __ip_erasure__   [classref boost::itl::inplace_erasure  inplace_erasure]]
[def __ip_bitset_union__      [classref boost::itl::inplace_bitset_union      inplace_bitset_union]]
[def __ip_bitset_difference__ [classref boost::itl::inplace_bitset_difference inplace_bitset_difference]]

[def __itv_bmap_add__ [memberref boost::itl::interval_base_map::add add]]


[def __ele_map__      [classref boost::itl::map map]]
[def __ele_maps__     [classref boost::itl::map maps]]
[def __itl_map__      [classref boost::itl::map itl::map]]
[def __itl_maps__     [classref boost::itl::map itl::maps]]
[def __itl_map_s__    [classref boost::itl::map itl::map's]]

[def __pabsorber__     [classref boost::itl::partial_absorber partial_absorber]]
[def __penricher__     [classref boost::itl::partial_enricher partial_enricher]]
[def __penrichers__    [classref boost::itl::partial_enricher partial_enrichers]]
[def __tabsorber__     [classref boost::itl::total_absorber  total_absorber]]
[def __tenricher__     [classref boost::itl::total_absorber  total_enricher]]

[def __itv_bse_set__  [classref boost::itl::interval_base_set interval_base_set]]
[def __e              [link element_type *e*]]
[def __i              [link interval_type *i*]]
[def __s              [link itl_set_type *s*]]
[def __S              [link interval_set_types *S*]]
[def __b              [link element_mapping_type *b*]]
[def __p              [link interval_mapping_type *p*]]
[def __m              [link itl_map_type *m*]]
[def __M              [link interval_map_types *M*]]
[def __ei             [link element_type *e*] [link interval_type *i*]]
[def __bp             [link element_mapping_type *b*] [link interval_mapping_type *p*]]
[def __eS             [link element_type *e*] [link interval_set_types *S*]]
[def __es             [link element_type *e*] [link itl_set_type *s*]]
[def __bM             [link element_mapping_type *b*] [link interval_map_types *M*]]
[def __bm             [link element_mapping_type *b*] [link itl_map_type *m*]]
[def __ebm            [link element_type *e*] [link element_mapping_type *b*] [link itl_map_type *m*]]
[def __eiS            [link element_type *e*] [link interval_type *i*] [link interval_set_types *S*]]
[def __bpM            [link element_mapping_type *b*] [link interval_mapping_type *p*] [link interval_map_types *M*]]

[def __S1             [link ph_def_S1 *S1*]]
[def __S2             [link ph_def_S2 *S2*]]
[def __S3             [link ph_def_S3 *S3*]]

[def __M1             [link ph_def_M1 *M1*]]
[def __M3             [link ph_def_M3 *M3*]]

[def __eiS_phs__      [link element_type placeholders]]
[def __eiS_Phs__      [link element_type Placeholders]]

[def __eibpsSmM__     [link element_type *e*] [link interval_type *i*] 
                      [link element_mapping_type *b*] [link interval_mapping_type *p*]
                      [link itl_set_type *s*] [link interval_set_types *S*]
                      [link itl_map_type *m*] [link interval_map_types *M*]]

[def __biLConsCopyDest__ [link boost_itl.function_reference.construct__copy__destruct ['*Construct, copy, destruct*]]]
[def __biLContainedness__  [link boost_itl.function_reference.containedness ['*Containedness*]]]
[def __biLcontainedness__  [link boost_itl.function_reference.containedness ['*containedness*]]]
[def __biLEquivsOrderings__   [link boost_itl.function_reference.equivalences_and_orderings ['*Equivalences and Orderings*]]]
[def __biLSize__         [link boost_itl.function_reference.size ['*Size*]]]
[def __biLRange__        [link boost_itl.function_reference.range ['*Range*]]]
[def __biLSelection__    [link boost_itl.function_reference.selection ['*Selection*]]]
[def __biLAddition__     [link boost_itl.function_reference.addition ['*Addition*]]]
[def __biLadd__          [link boost_itl.function_reference.addition ['*add*]]]
[def __biLSubtraction__  [link boost_itl.function_reference.subtraction ['*Subtraction*]]]
[def __biLsubtraction__  [link boost_itl.function_reference.subtraction ['*subtraction*]]]
[def __biLInsertion__    [link boost_itl.function_reference.insertion ['*Insertion*]]]
[def __biLErasure__      [link boost_itl.function_reference.erasure ['*Erasure*]]]
[def __biLerasure__      [link boost_itl.function_reference.erasure ['*erasure*]]]
[def __biLIntersection__ [link boost_itl.function_reference.intersection ['*Intersection*]]]
[def __biLintersection__ [link boost_itl.function_reference.intersection ['*intersection*]]]
[def __biLSymmetricDifference__ [link boost_itl.function_reference.symmetric_difference ['*Symmetric difference*]]]
[def __biLIteratorRelated__ [link boost_itl.function_reference.iterator_related ['*Iterator related*]]]
[def __biLStreaming__    [link boost_itl.function_reference.streaming__conversion ['*Streaming, conversion*]]]

[/ column headers]
[def __ch_dom_t__      domain\ntype]
[def __ch_itv_t__      interval\ntype]
[def __ch_dom_mp_t__   domain\nmapping\ntype]
[def __ch_itv_mp_t__   interval\nmapping\ntype]
[def __ch_itv_sets__   interval\nsets]
[def __ch_itv_maps__   interval\nmaps]
[def __ch_itl_set__    interval\nsets]
[def __ch_itl_map__    interval\nmaps]

[def __bi_conceptual__ ['*conceptual*]]
[def __conceptual__    conceptual]
[def __Conceptual__    Conceptual]

[def __bi_iterative__  ['*iterative*]]
[def __iterative__     iterative]
[def __Iterative__     Iterative]

[def __O1__            ['O(1)]]
[def __aO1__           ['amortized O(1)]]
[def __On__            ['O(n)]]
[def __Om__            ['O(m)]]
[def __Ok__            ['O(k)]]
[def __Onpm__          ['O(n+m)]]
[def __Olgn__          ['O(log n)]]
[def __a_Olgn__        ['amortized\nO(log n)]]
[def __Onlgn__         ['O(n log n)]]
[def __Omlgn__         ['O(m log n)]]
[def __Omlgnpm__       ['O(m log(n+m))]]

[def __inpops__        `+= -= &= ^=`]
[def __ainpop__        `o=`]


[/ Cited Boost resources ]

[/ Other web resources ]

[/ Icons ]

[def __SPACE__ [$images/space.png]]
[def __GO_TO__ [$images/callouts/R.png]]


[include introduction.qbk]
[include examples.qbk]
[include projects.qbk]
[include concepts.qbk]
[include semantics.qbk]
[include interface.qbk]
[include implementation.qbk]
[include functions.qbk]
[include acknowledgments.qbk]
[xinclude itldoc.xml]


14:46 18.11.2008