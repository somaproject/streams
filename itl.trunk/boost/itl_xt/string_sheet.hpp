/*-----------------------------------------------------------------------------+    
Copyright (c) 1999-2006: Cortex Software GmbH, Kantstrasse 57, Berlin
+------------------------------------------------------------------------------+
Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
+-----------------------------------------------------------------------------*/
#ifndef BOOST_ITL_STRING_SHEET_HPP_JOFA_050209
#define BOOST_ITL_STRING_SHEET_HPP_JOFA_050209

#include <iostream>
#include <fstream>
#include <boost/itl/string_list.hpp>
#include <boost/itl/detail/notate.hpp>

namespace boost{namespace itl
{

    const int MAX_INPUT_ROW_SIZE = 10000;

    class diff_desc
    {
    public:
        diff_desc(): m_SizeDiff(0), m_RowSizeDiff(0), m_Row(0), m_Col(0), m_Lhs(), m_Rhs() {}

        bool empty()const { 
            return m_SizeDiff==0 && m_RowSizeDiff==0 && m_Row==0; 
        }

        int getSizeDiff()const    {return m_SizeDiff;}
        int getRowSizeDiff()const{return m_RowSizeDiff;}
        int getRow()const        {return m_Row;}
        int getcol()const        {return m_Col;}
        std::string getLhs()const    {return m_Lhs;} 
        std::string getRhs()const    {return m_Rhs;} 

        void setSizeDiff    (int SizeDiff){m_SizeDiff=SizeDiff;}
        void setRowSizeDiff    (int RowSizeDiff){m_RowSizeDiff=RowSizeDiff;}
        void setRow        (int Row){m_Row=Row;}
        void setCol        (int Col){m_Col=Col;}
        void setLhs (std::string Lhs){m_Lhs=Lhs;} 
        void setRhs (std::string Rhs){m_Rhs=Rhs;} 

        std::string afxReport(const std::string& file)const;

    private:
        int        m_SizeDiff;
        int        m_RowSizeDiff;
        int        m_Row;
        int        m_Col;
        std::string m_Lhs; 
        std::string m_Rhs;
    };

    class string_sheet : public list<string_list>
    {
    public:
        typedef list<string_list> string_sheetD;
    public:
        diff_desc diff(const string_sheet& rhs)const;

        void fprint(FILE* file, const char* sep = "\t")const;
        void fscan(std::ifstream& ifstr, const char* sep = "\t");
    };
}} // namespace itl boost

#endif // BOOST_ITL_STRING_SHEET_HPP_JOFA_050209

